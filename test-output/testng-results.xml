<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Setting up capabilities...]]>
    </line>
    <line>
      <![CDATA[Starting tests]]>
    </line>
    <line>
      <![CDATA[currentTime: 1:47 PM Alarm]]>
    </line>
    <line>
      <![CDATA[Cleaning up]]>
    </line>
  </reporter-output>
  <suite started-at="2022-02-28T13:47:39 GMT-06:00" name="Default suite" finished-at="2022-02-28T13:47:56 GMT-06:00" duration-ms="17109">
    <groups>
    </groups>
    <test started-at="2022-02-28T13:47:39 GMT-06:00" name="Default test" finished-at="2022-02-28T13:47:56 GMT-06:00" duration-ms="17109">
      <class name="tests.AlarmTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:39 GMT-06:00" name="setup" finished-at="2022-02-28T13:47:45 GMT-06:00" duration-ms="6388" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Setting up capabilities...]]>
            </line>
            <line>
              <![CDATA[Starting tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="alarmTimeValidFormat()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:45 GMT-06:00" name="alarmTimeValidFormat" finished-at="2022-02-28T13:47:47 GMT-06:00" duration-ms="2202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alarmTimeValidFormat -->
        <test-method signature="changeAlarmTime()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:47 GMT-06:00" name="changeAlarmTime" finished-at="2022-02-28T13:47:50 GMT-06:00" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeAlarmTime -->
        <test-method signature="createNewAlarm()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:50 GMT-06:00" name="createNewAlarm" finished-at="2022-02-28T13:47:52 GMT-06:00" duration-ms="2047" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[currentTime: 1:47 PM Alarm]]>
            </line>
          </reporter-output>
        </test-method> <!-- createNewAlarm -->
        <test-method signature="createNewAlarmCancel()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:52 GMT-06:00" name="createNewAlarmCancel" finished-at="2022-02-28T13:47:53 GMT-06:00" duration-ms="843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewAlarmCancel -->
        <test-method signature="failingTestExample()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:53 GMT-06:00" name="failingTestExample" finished-at="2022-02-28T13:47:55 GMT-06:00" duration-ms="2251" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at tests.AlarmTests.failingTestExample(AlarmTests.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failingTestExample -->
        <test-method is-config="true" signature="terminate()[pri:0, instance:tests.AlarmTests@4fb3ee4e]" started-at="2022-02-28T13:47:55 GMT-06:00" name="terminate" finished-at="2022-02-28T13:47:56 GMT-06:00" duration-ms="336" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Cleaning up]]>
            </line>
          </reporter-output>
        </test-method> <!-- terminate -->
      </class> <!-- tests.AlarmTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
